{"version":3,"file":"validate.js","sources":["../src/validate.js"],"sourcesContent":["// validate is the automated way\n// to keep your json or model attributes valid\n\n// Instructions\n// --------------\n\n// To make a field mandatory set it equal to [] or set your rules instead\n\n//     var validations = { name: [] }\n\n//     var validations = { name: [ [v8n().fullname(), 'Enter your fullname'] ] }\n\n// To make a field not mandatory you can either no list it in your stack of field validations of set it to false\n\n//     var validations = { name: false }\n\n// Advanced topics:\n\n// 1. You can also send a function for validations so you can define your rules according to values received\n\n// 2. On rule array you can send a third value that is called 'getValue'.\n// That will be a function responsible for return a value to be validated for that field\n\n//     var validations = { name: [ [v8n().fullname(), 'Enter your fullname', ()=>{ return 'any other variable'; }] ] }\n\n// 3. If you want to test a value received in realtime from user input set validateAll to false\n\n//     vl.validate({ name: 'bd' }, {validateAll: false})\n\n// 4. Complex objects works well too.\n\n//     var json = {name: 'bd', contacts: [ {email: 'team@bd.org'} , {email: 'admin@bd.org'} ]};\n//     var validations = {name: [], 'contacts[][email]': []};\n//     vl.validate(json, {validations})\n\n// Examples\n// --------------\n\n//     - simple validation\n//     var validations = { name: [ [v8n().fullname(), 'Enter your fullname'] ] }\n//     var json = { name: 'someone' }\n//     var r;\n//     if((r = vl.validate(json, {validations}))!==null) {\n//          console.log(r);\n//     }\n\n//     - making a field just mandatory\n//     var validations = { name: [] }\n//     var json = { name: 'someone' }\n//     var r;\n//     if((r = vl.validate(json, {validations}))!==null) {\n//          console.log(r);\n//     }\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport v8n from 'v8n-bd';\nimport _ from 'underscore-bd';\n\nvar vl = {\n    validator: v8n,\n    deepValueSearch: _.deepValueSearch,\n    validateAll: true,\n    // replacement for backbone core method\n    _validate(attrs, options) {\n        if (!options.validate || !this.validate) {\n            return true;\n        }\n\n        // this line was causing trouble when changing model validations for existent rows (because rows would be invalid if some validations became necessary after the row was already stored)\n        // attrs = _.extend({}, this.attributes, attrs);\n        attrs = _.extend({}, attrs);\n\n        var error = (this.validationError =\n            this.validate(attrs, options) || null);\n        if (!error) {\n            return true;\n        }\n\n        this.trigger(\n            'invalid',\n            this,\n            error,\n            _.extend(options, { validationError: error })\n        );\n        return false;\n    },\n    // Core method the walk through fields and their set of rules applying each one of them\n    validate(attrs, options = {}) {\n        options = _.defaults(options, {\n            validateAll: this.validateAll,\n        });\n\n        var error = [],\n            validations = this.getValidations(attrs, options),\n            notEmptyValidation = this.validator().passesAnyOf(\n                this.validator().minLength(1),\n                this.validator().not.undefined().not.null().pattern(/.+/)\n            ),\n            isRequired = {};\n\n        // walk through fields listed as required\n        for (let field in validations) {\n            isRequired[field] = true;\n            var value = this.deepValueSearch(field, attrs, true);\n\n            // working with array so we can validate lists like 'contacts[][email]'\n            ((!_.isArray(value) && !_.isJSON(value)) ||\n                (!/\\[\\]\\[\\w+\\]/.test(field) && _.isArray(value))) && // ensure to pass the correct value to test length of lists\n                (value = [value]);\n            !_.isArray(validations[field]) &&\n                (validations[field] = [validations[field]]);\n\n            // walk through field rule specifications\n            for (let x in validations[field]) {\n                let validation = validations[field][x];\n\n                if (\n                    typeof validation[0] === 'boolean' ||\n                    typeof validation[0] === 'undefined'\n                ) {\n                    isRequired[field] = !(validation === false);\n                    if (!isRequired[field]) {\n                        continue;\n                    }\n                    // if is required, set default validation and error message for it\n                    validation = [\n                        notEmptyValidation,\n                        validation[1] || this.getRequiredErrorMessage(field),\n                        validation[2] || null,\n                    ];\n                }\n\n                error = error.concat(\n                    this.validateValues(\n                        value,\n                        isRequired[field],\n                        options.validateAll,\n                        field,\n                        attrs,\n                        validation\n                    )\n                );\n            }\n        }\n\n        return error.length > 0 ? error : null;\n    },\n    validateValues(value, isRequired, validateAll, field, attrs, validation) {\n        var error = [];\n        for (var x in value) {\n            error = error.concat(\n                this.validateValue(\n                    x,\n                    value[x],\n                    isRequired,\n                    validateAll,\n                    field,\n                    attrs,\n                    validation\n                )\n            );\n        }\n\n        return error;\n    },\n    validateValue(x, value, isRequired, validateAll, field, attrs, validation) {\n        var error = [];\n        let validationValue = this.getValidationValue(\n            validation,\n            value,\n            attrs,\n            field\n        );\n        if (\n            this.isRequiredNow(validationValue, isRequired, validateAll) &&\n            !this.isValid(field, attrs, validation[0], validationValue)\n        ) {\n            error.push([field, validation[1], x]);\n        }\n\n        return error;\n    },\n    getValidationValue(validation, value, attrs, field) {\n        if (!validation[2] || typeof validation[2] !== 'function') {\n            return value;\n        }\n\n        var allAttrs = _.extend({}, this.attributes, attrs);\n        return validation[2](value, allAttrs, field);\n    },\n    getValidations(attrs, options = {}) {\n        var definedValidations = _.result2(\n            this,\n            'validations',\n            {},\n            [attrs, options],\n            this\n        ),\n            validations = _.result2(\n                options,\n                'validations',\n                definedValidations,\n                [attrs, options],\n                this\n            );\n\n        return validations;\n    },\n    // Run through all validations to collect mandatory fields and validations\n    getMandatoryValidations(attrs, options = {}) {\n        var validations = this.getValidations(attrs, options),\n            mandatory = {};\n\n        // walk through fields listed as required\n        for (let field in validations) {\n            !_.isArray(validations[field]) &&\n                (validations[field] = [validations[field]]);\n            // walk through field rule specifications\n            for (let x in validations[field]) {\n                let validation = validations[field][x];\n                if (\n                    typeof validation[0] === 'undefined' ||\n                    (typeof validation[0] === 'boolean' &&\n                        validation[0] !== false) ||\n                    (typeof validation[0] === 'object' &&\n                        !validation[0].test(''))\n                ) {\n                    !(field in mandatory) && (mandatory[field] = []);\n                    mandatory[field].push(validation);\n                }\n            }\n        }\n\n        return mandatory;\n    },\n    // A field will be required when its present in the set of rules - even if its value is an empty [] -\n    // AND (its present in the values received OR (its set as required and validate all was set true)) .\n    // A bit confusing I know. But this will allow you to run validate in your form everytime a field is changed avoiding\n    // to alert of invalid fields that yet weren't filled by the guest\n    isRequiredNow(input, fieldRequired = false, validateAll) {\n        // the field will be required only if its value was sent or if its set as required (even without a specific rule)\n        return (\n            typeof input !== 'undefined' || (!!fieldRequired && !!validateAll)\n        );\n    },\n    // Apply the rule test to value received. value, attrs inputted and field name are sent to validation method - it can be handy.\n    isValid(field, attrs, validation, value) {\n        if (!validation.test(value)) {\n            return false;\n        }\n        return true;\n    },\n    requiredErrorMessage: 'Field *{{field}}* cannot be empty',\n    getRequiredErrorMessage(field) {\n        return _.template(this.requiredErrorMessage)({\n            field,\n        });\n    },\n};\n\nexport default vl;\n"],"names":["vl","validator","v8n","deepValueSearch","_","validateAll","_validate","attrs","options","validate","extend","error","validationError","trigger","defaults","validations","getValidations","notEmptyValidation","passesAnyOf","minLength","not","undefined","null","pattern","isRequired","field","value","isArray","isJSON","test","x","validation","getRequiredErrorMessage","concat","validateValues","length","validateValue","validationValue","getValidationValue","isRequiredNow","isValid","push","allAttrs","attributes","definedValidations","result2","getMandatoryValidations","mandatory","input","fieldRequired","requiredErrorMessage","template"],"mappings":"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"}